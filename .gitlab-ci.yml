stages:
   - build
   - test
   - html
   - deploy


build-gfortran-hdf5:
  image: iffregistry.fz-juelich.de/fleur/fleur:latest
  stage: build
  artifacts:
     paths:
       - build
     expire_in: 1h
  script:
    - cd $CI_PROJECT_DIR
    - ./configure.sh GITLAB
#    - FC=/usr/lib64/openmpi/bin/mpif90 ./configure.sh
    - cd build
    - make -j 2
#  only:
#    - schedules
#    - triggers
#    - web

.test-gfortran-hdf5: &test-gfortran-hdf5
  image: iffregistry.fz-juelich.de/fleur/fleur:latest
  stage: test
  dependencies:
    - build-gfortran-hdf5
  script:
    - ulimit -s unlimited
    - export OMP_NUM_THREADS=2
    - export juDFT_MPI="mpirun -n 2 --allow-run-as-root --mca btl vader,self"
    - cd $CI_PROJECT_DIR
    - cd build
    - CTEST_FLAGS="$(echo "$CI_JOB_NAME" | sed -rn 's/.*-([0-9]+)of([0-9]+)$/-I \1,,\2/p')"
    - ctest $CTEST_FLAGS -j 1
  artifacts:
    when: on_failure
    paths:
      - build/Testing
#  only:
#    - schedules
#    - triggers
#    - web

test-gfortran-hdf5-1of3:
  <<: *test-gfortran-hdf5

test-gfortran-hdf5-2of3:
  <<: *test-gfortran-hdf5

test-gfortran-hdf5-3of3:
  <<: *test-gfortran-hdf5

build-gfortran-serial:
  image: iffregistry.fz-juelich.de/fleur/fleur:latest
  stage: build
  script:
    - cd $CI_PROJECT_DIR
    - ./configure.sh -l serial -mpi FALSE -hdf5 FALSE -cmake_opts -DFLEUR_USE_OPENMP=OFF
    - cd build.serial
    - make -j 2
  artifacts:
    paths:
      - build.serial
    expire_in: 1h
#  only:
#    - schedules
#    - triggers
#    - web

test-gfortran-serial:
  image: iffregistry.fz-juelich.de/fleur/fleur:latest
  stage: test
  dependencies:
    - build-gfortran-serial
  script:
    - ulimit -s unlimited
    - cd $CI_PROJECT_DIR
    - cd build.serial
    - ctest -j 2
  artifacts:
    when: on_failure
    paths:
      - build.serial/Testing
  only:
    - schedules
    - triggers
    - web

pages:
  image: iffregistry.fz-juelich.de/fleur/fleur:latest
  stage: deploy
  script:
    - echo "HTML should be ready from cache..."
    - mv /builds/fleur/fleur/docs/Docu_main.html /builds/fleur/fleur/public/index.html
  environment:
     name: HTML-Pages
     url: https://fleur.iffgit.fz-juelich.de/fleur
  artifacts:
    paths:
      - public
  only:
    - web

doxygen:
  image: iffregistry.fz-juelich.de/fleur/fleur:latest
  stage: html
  script:
    - cd /builds/fleur/fleur/build ; make doc
    - mkdir ../public
    - mv docs/html/ ../public/doxygen
  artifacts:
    paths:
      - public
      - build/fleur
      - build/fleur_MPI
      - build/inpgen
  only:
    - web


build-pgi:
  image: iffregistry.fz-juelich.de/fleur/fleur:pgi
  stage: build
  artifacts:
     paths:
       - build.pgi
     expire_in: 1h
  script:
    - cd /builds/fleur/fleur; ./configure.sh -l pgi -cmake cmake3 ; cd build.pgi; make
  allow_failure: true
  only:
    - schedules
    - triggers
    - web


test-pgi:
  image: iffregistry.fz-juelich.de/fleur/fleur:pgi
  stage: test
  dependencies:
    - build-pgi
  script:
    - export OMP_NUM_THREADS=2
    - cd /builds/fleur/fleur/build.pgi;ctest
  allow_failure: true
  artifacts:
    when: on_failure
    paths:
      - build.pgi/Testing
  only:
     - schedules
     - web
     - triggers


build-intel-static:
  image: iffregistry.fz-juelich.de/fleur/fleur:intel-static
  stage: build
  artifacts:
     paths:
       - build.intel-static
     expire_in: 1h
  script:
    - set +e && source compilervars.sh intel64 && set -e
    - ulimit -s unlimited
    - cd /builds/fleur/fleur
    - ./configure.sh -l intel-static INTEL_DOCKER_STATIC
    - cd build.intel-static
    - make -j 2
  artifacts:
    when: on_success
    paths:
    - build.intel-static/fleur_MPI
    - build.intel-static/inpgen
  allow_failure: true
  only:
    - web


build-intel:
  image: iffregistry.fz-juelich.de/fleur/fleur:intel-static
  stage: build
  artifacts:
     paths:
       - build.intel
     expire_in: 1h
  script:
    - set +e && source compilervars.sh intel64 && set -e
    - ulimit -s unlimited
    - cd /builds/fleur/fleur
    - CC=gcc FC=mpiifort CXX=mpicxx ./configure.sh -l intel
    - cd build.intel
    - make -j 2
  allow_failure: true
  only:
    - schedules
    - triggers
    - web


test-intel:
  image: iffregistry.fz-juelich.de/fleur/fleur:intel-static
  stage: test
  dependencies:
     - build-intel
  script:
    - set +e && source compilervars.sh intel64 && set -e
    - ulimit -s unlimited
    - export OMP_NUM_THREADS=2
    - cd /builds/fleur/fleur/build.intel;ctest
  allow_failure: true
  artifacts:
    when: on_failure
    paths:
      - build.intel.debug/Testing#/failed
#      - build.intel.debug/Testing/test.oldlogs
  only:
     - schedules
     - web
     - triggers

gfortran-coverage:
  image: iffregistry.fz-juelich.de/fleur/fleur:latest
  stage: html
  script:
      - cd /builds/fleur/fleur; ./configure.sh -l coverage -flags --coverage GITLAB; cd build.coverage; make -j 4
      - lcov --capture --initial -d CMakeFiles -o baseline.info
      - ulimit -s unlimited ;export juDFT_MPI="mpirun -n 2 --allow-run-as-root ";ctest
      - lcov --capture  -d CMakeFiles -o after.info
      - lcov --add-tracefile baseline.info --add-tracefile after.info -o combined.info
      - genhtml combined.info --output-directory html_out
      - mkdir ../public;mv html_out ../public/coverage_html
  allow_failure: true
  artifacts:
    paths:
      - public
  environment:
    name: Coverage
    url: https://fleur.iffgit.fz-juelich.de/fleur/coverage_html
  only:
      - web
