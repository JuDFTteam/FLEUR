include_directories(include)

add_subdirectory(fleurinput)

set(c_filesInpgen io/xml/inputSchema.h io/xml/dropInputSchema.c)
set(c_filesFleur io/xml/inputSchema.h io/xml/dropInputSchema.c io/xml/xmlInterfaceWrapper.c)
if(FLEUR_USE_CUSOLVER)
  set(c_filesFleur ${c_filesFleur} diagonalization/cusolver.c)
endif()


set(fleur_F90 main/fleur.F90)
set(fleur_F77 "")
include(eigen/CMakeLists.txt)
include(force/CMakeLists.txt)
include(main/CMakeLists.txt)
include(core/CMakeLists.txt)
include(eigen_secvar/CMakeLists.txt)
include(global/CMakeLists.txt)
include(io/CMakeLists.txt)
include(optional/CMakeLists.txt)
include(xc-pot/CMakeLists.txt)
include(cdn/CMakeLists.txt)
include(diagonalization/CMakeLists.txt)
include(eigen_soc/CMakeLists.txt)
include(math/CMakeLists.txt)
include(orbdep/CMakeLists.txt)
include(cdn_mt/CMakeLists.txt)
include(dos/CMakeLists.txt)
include(fermi/CMakeLists.txt)
include(init/CMakeLists.txt)
include(ldau/CMakeLists.txt)
include(mix/CMakeLists.txt)
include(vgen/CMakeLists.txt)
include(docs/CMakeLists.txt)
include(mpi/CMakeLists.txt)
include(hybrid/CMakeLists.txt)
include(eels/CMakeLists.txt)
include(types/CMakeLists.txt)
include(wannier/CMakeLists.txt)
include(wannier/uhu/CMakeLists.txt)
include(forcetheorem/CMakeLists.txt)
include(rdmft/CMakeLists.txt)
include(kpoints/CMakeLists.txt)


include(tests/tests_old.cmake)
#include(tests/tests_new.cmake)


set(fleur_SRC ${fleur_F90} ${fleur_F77})

set_source_files_properties(${fleur_F90} PROPERTIES Fortran_FORMAT FREE)
set_source_files_properties(${fleur_F77} PROPERTIES Fortran_FORMAT FIXED)

string(REPLACE ";" " " CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} ${FLEUR_PRECISION_OPTION}")
message("Flags: ${CMAKE_Fortran_FLAGS}")

set(FLEUR_LINK_LIBRARIES "${FLEUR_LINK_LIBRARIES};juDFT")

if (${FLEUR_USE_SERIAL})
   #Serial executables
   add_executable(fleur ${fleur_SRC} ${c_filesFleur})
   target_compile_definitions(fleur PUBLIC ${FLEUR_DEFINITIONS})
   target_link_libraries(fleur ${FLEUR_LIBRARIES})
   target_link_libraries(fleur ${FLEUR_LINK_LIBRARIES})
   set_target_properties(fleur PROPERTIES Fortran_MODULE_DIRECTORY modules/fleur COMPILE_OPTIONS -Imodules/fleur)
endif()
#parallel executables
if(${FLEUR_USE_MPI})
  #fleur_MPI
  add_executable(fleur_MPI ${juDFT_HDF} ${juDFT_SRC_F90} ${fleur_SRC} ${c_filesFleur} ${fleur_SRC_MPI})
  target_compile_definitions(fleur_MPI PUBLIC ${FLEUR_MPI_DEFINITIONS})
  target_link_libraries(fleur_MPI ${FLEUR_LIBRARIES})
  target_link_libraries(fleur_MPI  ${FLEUR_LINK_LIBRARIES})
  set_target_properties(fleur_MPI PROPERTIES Fortran_MODULE_DIRECTORY modules/fleur_MPI COMPILE_OPTIONS -Imodules/fleur_MPI)
endif ()



include(cmake/docker.txt)


#if (${FLEUR_USE_SERIAL})        
#install(TARGETS fleur inpgen 
#        CONFIGURATIONS Release
#        DESTINATION bin)
#endif()
#if (${FLEUR_USE_MPI})        
#install(TARGETS fleur_MPI 
#        CONFIGURATIONS Release
#        DESTINATION bin)
#endif()
