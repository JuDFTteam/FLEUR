if(NOT WIN32)
  string(ASCII 27 Esc)
  set(CReset "${Esc}[m")
  set(Bold   "${Esc}[1m")
  set(Red    "${Esc}[31m")
  set(Green  "${Esc}[32m")
  set(BRed   "${Esc}[1;31m")
  set(BGreen "${Esc}[1;32m")
endif()


message("${BRed}\n\n************************Summary***************************${CReset}")
message("${Green}Compiler   : ${CReset} ${CMAKE_Fortran_COMPILER}")
message("${Green}Compiler ID: ${CReset} ${CMAKE_Fortran_COMPILER_ID}")
message("${Green}Flags      : ${CReset} ${CMAKE_Fortran_FLAGS}")
message("${Green}Libraries  : ${CReset} ${FLEUR_LIBRARIES}")
message("\n${Red}These Libraries are required:${CReset}")
message("${Green}  XML Library found           : ${CReset}    ${FLEUR_USE_XML}")
message("${Green}  LAPACK Library found        : ${CReset}    ${FLEUR_USE_LAPACK}")
message("${Red}These Libraries are optional:${CReset}")
message("${Green}  FFT from MKL found          : ${CReset}    ${FLEUR_USE_FFTMKL}")
message("${Green}  HDF5 Library found          : ${CReset}    ${FLEUR_USE_HDF5}")
message("${Green}  Wannier90 1.2 Library found : ${CReset}    ${FLEUR_USE_WANN}")
message("${Green}  Wannier90-4   Library found : ${CReset}    ${FLEUR_USE_WANN4}")
message("${Green}  Wannier90-5   Library found : ${CReset}    ${FLEUR_USE_WANN5}")
message("${Green}  MAGMA Library found         : ${CReset}    ${FLEUR_USE_MAGMA}")
message("${Green}  MPI Library found           : ${CReset}    ${FLEUR_USE_MPI}")
if (FLEUR_USE_MPI)
  message("${Green}    SCALAPACK Library found   : ${CReset}    ${FLEUR_USE_SCALAPACK}")
  message("${Green}    ELPA Library found        : ${CReset}    ${FLEUR_USE_ELPA}")
else()
  message("${Green}    SCALAPACK Library found   : ${CReset}    ---")
  message("${Green}    ELPA Library found        : ${CReset}    ---")
endif()
message("${Green}  Compile GPU version         :  ${CReset}   ${FLEUR_USE_GPU}")
message("\n")
message("${Green}Compile serial version        : ${CReset}    ${FLEUR_USE_SERIAL}")
message("${Green}Compile parallel version      : ${CReset}    ${FLEUR_USE_MPI}")
message("\n")
message("${Green}Git describe  : ${CReset}${git_describe}")
message("${Green}Git hash      : ${CReset}${git_hash}")
message("${Green}Doxygen found : ${CReset}${FLEUR_USE_DOXYGEN}")
message("${BRed}************************-------***************************${CReset}")

#some checks
if (NOT FLEUR_USE_XML)
   message(FATAL_ERROR "${BRed}No libxml2 Library found. This is required.${CReset}")
endif()
if (NOT FLEUR_USE_LAPACK)
   message(FATAL_ERROR "${BRed}No LAPACK Library found. This is required.${CReset}")
endif()

if (NOT (FLEUR_USE_SERIAL OR FLEUR_USE_MPI))
    message(FATAL_ERROR "You should either compile a parallel or serial version (or both)")
endif()
