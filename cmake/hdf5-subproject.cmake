if (FLEUR_HDF5_SUBMODULE)
set(HDF5_EXTERNALLY_CONFIGURED ON)
#set(HDF5_EXTERNAL_LIB_PREFIX "fleur")
set(HDF5_ENABLE_F2003 ON)
set(HDF5_ENABLE_FORTRAN ON)
set(HDF5_BUILD_FORTRAN ON)
set(HDF5_BUILD_CPP_LIB OFF)
set(HDF5_BUILD_HL_LIB OFF)
set(HDF5_ENABLE_Z_LIB_SUPPORT OFF)
set(HDF5_ENABLE_SZIP_SUPPORT OFF)
set(BUILD_STATIC_LIBS ON)
set(HDF5_ENABLE_PARALLEL FLEUR_USE_MPI)
#set(HDF5_F90_BINARY_DIR "${CMAKE_SOURCE_DIR}/external/hdf5-git/fortran/")
#set(CMAKE_Fortran_MODULE_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/modules/hdf5")
#set(CMAKE_Fortran_MODULE_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/external/hdf5/CMake-hdf5-1.10.3/HDF_Group/HDF5/1.10.3/include/")
add_subdirectory (external/hdf5-git)

if(${FLEUR_USE_MPI})
  target_link_libraries(fleur_MPI hdf5_fortran-static)
  target_compile_definitions(fleur_MPI PUBLIC "CPP_HDF5MPI")
  target_compile_definitions(fleur_MPI PUBLIC "CPP_HDF")
  target_compile_definitions(juDFT PUBLIC "CPP_HDF5MPI")
endif()
if (${FLEUR_USE_SERIAL})
  target_link_libraries(fleur hdf5_fortran-static)
  target_link_libraries(inpgen hdf5_fortran-static)
  target_compile_definitions(fleur PUBLIC "CPP_HDF")
endif()

target_link_libraries(juDFT hdf5_fortran-static)
target_link_libraries(juDFT hdf5-static)
target_compile_definitions(juDFT PUBLIC "CPP_HDF")

set (FLEUR_USE_HDF 1)

endif()
