#Check if we can compile with GPU
if (CLI_FLEUR_USE_GPU)
   #No check is done
   set(FLEUR_USE_GPU TRUE)
   message("GPU:${CLI_FLEUR_USE_GPU}")
   if (${CLI_FLEUR_USE_GPU} MATCHES "cuda8")
      set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -ta=tesla:cuda8.0,cc60 -Mcuda:kepler+ -Minfo=accel -Mcudalib=cublas -acc ")
      message("Using cuda8")
   elseif(${CLI_FLEUR_USE_GPU} MATCHES "cuda9")
      set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -Mcuda=cuda9.0,cc60 -Mcuda=rdc -Mcudalib=cublas")
   elseif(${CLI_FLEUR_USE_GPU} MATCHES "cuda9.1")
      set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -Mcuda=cuda9.1,cc60 -Mcuda=rdc -Mcudalib=cublas")
   elseif(${CLI_FLEUR_USE_GPU} MATCHES "nvtx")
      set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -Mcuda=cuda9.0,cc60 -Mcuda=rdc -Mcudalib=cublas -lnvToolsExt ")
   elseif(${CLI_FLEUR_USE_GPU} MATCHES "emu")
      set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -Mcuda=emu -Mcudalib=cublas -Minfo=accel ")
   endif()
   set(FLEUR_MPI_DEFINITIONS ${FLEUR_MPI_DEFINITIONS} "CPP_GPU" "CPP_MANAGED=,MANAGED")
   set(FLEUR_DEFINITIONS ${FLEUR_DEFINITIONS} "CPP_GPU" "CPP_MANAGED=,MANAGED")
#Now check for cusolverDN library
   set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Mcuda")
   try_compile(FLEUR_USE_CUSOLVER ${CMAKE_BINARY_DIR} ${CMAKE_SOURCE_DIR}/cmake/tests/test_cusolver.c
	    LINK_LIBRARIES "-lcusolver"
            )
   if (FLEUR_USE_CUSOLVER)
     set(FLEUR_LIBRARIES "${FLEUR_LIBRARIES};-lcusolver")
     set(FLEUR_MPI_DEFINITIONS ${FLEUR_MPI_DEFINITIONS} "CPP_CUSOLVER")
     set(FLEUR_DEFINITIONS ${FLEUR_DEFINITIONS} "CPP_CUSOLVER")
   endif()
else()
   set(FLEUR_USE_GPU FALSE)
   set(FLEUR_MPI_DEFINITIONS ${FLEUR_MPI_DEFINITIONS} "CPP_MANAGED=")
   set(FLEUR_DEFINITIONS ${FLEUR_DEFINITIONS} "CPP_MANAGED=")
endif()
